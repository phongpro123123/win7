name: Windows Server RDP with Docker and ngrok

on: push

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Pull and run Windows Server Docker container
      run: |
        docker pull mcr.microsoft.com/windows/servercore:ltsc2019
        docker run -d --name winserver -p 3389:3389 mcr.microsoft.com/windows/servercore:ltsc2019
        docker exec winserver powershell -Command "Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0"
        docker exec winserver powershell -Command "Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'"

    - name: Download and set up ngrok
      run: |
        curl -o ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip
        tar -xf ngrok.zip
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        Start-Process -NoNewWindow -FilePath ./ngrok -ArgumentList "tcp 3389"

    - name: Wait for ngrok to establish the tunnel
      run: Start-Sleep -Seconds 120

    - name: Get ngrok public URL
      run: |
        $url = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
        $url.tunnels[0].public_url

    - name: Keep the session alive
      run: Start-Sleep -Seconds 43200
